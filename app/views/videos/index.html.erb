<div class="jumbotron">
  <div class="container">
    <h1>Share your videos with the world!</h1>
    <p>Click the button below to share your video from YouTube.</p>
    <p>
      <%= link_to 'Add video now!', new_video_path, class: 'btn btn-primary btn-lg' %>
    </p>
  </div>
</div>

<% if @videos.any? %>
    <div class="container">
      <h1>Latest videos</h1>
      <div id="player-wrapper"></div>
      <% @videos.in_groups_of(3) do |group| %>
          <div class="row">
            <% group.each do |video| %>
                <% if video %>
                    <div class="col-md-4">
                      <div class="yt_video thumbnail">
                        <%= link_to image_tag("https://img.youtube.com/vi/#{video.uid}/mqdefault.jpg", alt: video.title,
                                              class: 'img-rounded'),
                                    "https://www.youtube.com/watch?v=#{video.uid}", target: '_blank' %>
                        <div class="caption">
                          <h5><%= video.title %></h5>
                          <p>Published at <%= video.published_at.strftime('%-d %B %Y %H:%M:%S') %></p>
                          <p>
                            <span class="glyphicon glyphicon glyphicon-thumbs-up"></span> <%= video.likes %>
                            <span class="glyphicon glyphicon glyphicon-thumbs-down"></span> <%= video.dislikes %>
                          </p>
                        </div>
                      </div>
                    </div>
                <% end %>
            <% end %>
          </div>
      <% end %>
    </div>
<% end %>
<script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '200',
            width: '200',
            videoId: '<%=video%>',
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo() {
        player.stopVideo();
    }
</script>